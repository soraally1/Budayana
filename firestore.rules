rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Orders collection
    match /orders/{orderId} {
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        isAdmin()
      );
      
      allow update: if isAuthenticated() && (
        (request.auth.uid == resource.data.userId && 
         request.resource.data.diff(resource.data).affectedKeys()
         .hasOnly(['status', 'paymentStatus', 'updatedAt'])) ||
        isAdmin()
      );
      
      allow delete: if isAdmin();
    }
    
    // Events collection
    match /events/{eventId} {
      // Anyone can read events
      allow read: if true;
      allow create, update, delete: if true;
    }
    
    // Tickets collection
    match /tickets/{ticketId} {
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || 
        isAdmin()
      );
      
      allow update: if isAuthenticated() && (
        (request.auth.uid == resource.data.userId && 
         request.resource.data.diff(resource.data).affectedKeys()
         .hasOnly(['status', 'usedAt', 'updatedAt'])) ||
        isAdmin()
      );
      
      allow delete: if isAdmin();
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read and write their own data
      allow read, write: if isOwner(userId);
      
      // Admins can read all user data
      allow read: if isAdmin();
    }
    
    // User profiles collection
    match /profiles/{userId} {
      allow read: if true;
      allow create, update: if isOwner(userId);
      allow delete: if isAdmin();
    }

    // BudayaPosts collection
    match /budayaPosts/{postId} {
      // Anyone can read posts
      allow read: if true;
      
      // Allow create if user is authenticated and provides required fields
      allow create: if isAuthenticated() && 
        request.resource.data.keys().hasAll(['title', 'description', 'category', 'hashtags', 'image', 'createdAt', 'author', 'authorId']) &&
        request.resource.data.authorId == request.auth.uid;
      
      // Allow update and delete if user is the author or an admin
      allow update, delete: if isAuthenticated() && (
        resource.data.authorId == request.auth.uid || 
        isAdmin()
      );
    }
  }
} 